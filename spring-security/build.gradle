apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: 'tomcat'


// JDK version source compatibility
sourceCompatibility = 1.8

group = 'springsecurity'

// project version
version = '1.0'

// War file name
war.baseName='springsecurity'


//war.archiveName "YOUR_SPECIAL_NAME.war"
/*war {
  
    baseName = 'springsecurity'
    version = '1.0-SNAPSHOT-' + System.currentTimeMillis();
}
war {
    baseName = 'wac'
    version = ''
}
*/


jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}


// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  // NOTE: You should declare only repositories that you need here
    mavenLocal()
    mavenCentral()
}


//tomcat
ext.tomcatVersion = '7.0.29'
ext.cargoVersion = '1.1.3'

ext{
    libVersion = [:]
    //Spring version
    libVersion.springVersion = "4.2.5.RELEASE"

    //thymleaf version
    libVersion.thymeleafspring4 = "2.1.2.RELEASE"
    libVersion.thymeleaf = "2.1.4.RELEASE"

    //logging version
    libVersion.slf4j="1.7.5"
    libVersion.log4j="1.2.16"
    libVersion.logback="1.0.13"
    
    //testing dependencies
    libVersion.junit="4.+"
    libVersion.mockito="1.9.5"
    libVersion.hamcrest="1.3"
    libVersion.powermock="1.5.1"

    // hibernate dependencies
    libVersion.hibernate="3.6.10.Final"
}


dependencies {
  //Spring security dependencies
  compile group: 'org.springframework.security', name: 'spring-security-web', version:'3.1.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version:'3.1.3.RELEASE'
    
    //springframework dependencies
    compile group: 'org.springframework', name: 'spring-core', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-context', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-jdbc', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-beans', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-aop', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-tx', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-expression', version: libVersion.springframework
    compile group: 'org.springframework', name: 'spring-web', version: libVersion.springframework
    compile(group: 'org.springframework', name: 'spring-webmvc', version:libVersion.springframework) {
    exclude(module: 'commons-logging')
    } 

    //logging
    runtime group: 'org.slf4j', name: 'slf4j-api', version: libVersion.slf4j
    runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: libVersion.slf4j
    runtime group: 'org.slf4j', name: 'jul-to-slf4j', version: libVersion.slf4j
    runtime group: 'org.slf4j', name: 'log4j-over-slf4j', version: libVersion.slf4j
    compile group: 'ch.qos.logback', name: 'logback-classic', version: libVersion.logback
   
   
    //servlets
    runtime group: 'javax.servlet', name: 'jstl', version:'1.2'
    runtime group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'      // should be providedCompile
    

    //test
    testCompile group: 'org.hamcrest', name:'hamcrest-all', version: libVersion.hamcrest
    testCompile group: 'org.mockito', name: 'mockito-all', version: libVersion.mockito
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: libVersion.powermock
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: libVersion.powermock


    //frontend
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version:libVersion.thymeleafspring4
    compile group: 'org.thymeleaf', name: 'thymeleaf', version:libVersion.thymeleaf

  //other dependencies
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.1.2'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version:'4.2.0.Final'
    compile group: 'com.google.guava', name: 'guava', version:'14.0.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.1'

    //tomcat 
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}", "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
       exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
       cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",  "org.codehaus.cargo:cargo-ant:${cargoVersion}"
   }
 
}
  

  

// Embeded Jetty for testing
jettyRun{
  contextPath = "spring4"
  httpPort = 8080
}

jettyRunWar{
  contextPath = "security"
  httpPort = 8080
}

//For Eclipse IDE only
eclipse {

  wtp {
    component {
      
      //define context path, default to project folder name
      contextPath = 'spring4'
      
    }
    
  }
}


repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
